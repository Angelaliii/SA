"use client"; // 這行確保此程式碼只在客戶端執行

// 引入 Material UI 所需的 CSS 和主題設置
import CssBaseline from "@mui/material/CssBaseline"; // MUI 的基本樣式重設
import { ThemeProvider, createTheme } from "@mui/material/styles"; // 用於創建並提供自定義的 MUI 主題
import type { Metadata } from "next"; // 用來設定頁面元資料 (Metadata)
import { Geist, Geist_Mono } from "next/font/google"; // 引入 Google 字型
import "../assect/globals.css"; // 引入全局 CSS 樣式

// 設定 Geist 字型樣式
const geistSans = Geist({
  variable: "--font-geist-sans", // 定義 CSS 變數名，這樣可以在全局使用這個字型
  subsets: ["latin"], // 設定字型的子集，這裡選擇了 Latin 字母集
});

// 設定 Geist Mono 字型樣式
const geistMono = Geist_Mono({
  variable: "--font-geist-mono", // 定義另一個 CSS 變數名，用於 Mono 字型
  subsets: ["latin"], // 同樣選擇 Latin 子集
});

// 創建自定義的 MUI 主題
const theme = createTheme({
  palette: {
    primary: {
      main: "#1976d2", // 設定主色調為藍色
    },
    secondary: {
      main: "#f50057", // 設定次要色調為粉紅色
    },
  },
  typography: {
    fontFamily: geistSans.style.fontFamily, // 設定全站的字型為 Geist 字型
  },
  components: {
    MuiCssBaseline: {
      styleOverrides: {
        body: {
          backgroundColor: "#f5f5f5", // 設定頁面的背景顏色為淡灰色
        },
      },
    },
  },
});

// 設定頁面元資料 (Metadata)，這些資訊會顯示在頁面標籤中
export const metadata: Metadata = {
  title: "Create Next App", // 頁面標題
  description: "Generated by create next app", // 頁面描述
};

// 根佈局組件，用來包裹整個應用
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode; // 頁面內容
}>) {
  return (
    <html lang="en"> {/* 設定 HTML 語言屬性為英文 */}
      <body className={`${geistSans.variable} ${geistMono.variable}`}> {/* 應用自定義的字型變數 */}
        <ThemeProvider theme={theme}> {/* 使用自定義的主題 */}
          <CssBaseline /> {/* 重設瀏覽器的默認樣式 */}
          {children} {/* 渲染頁面的內容 */}
        </ThemeProvider>
      </body>
    </html>
  );
}
